local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/gerisxx/LIBv2/main/Source.lua"))()
    local Window = Library:MakeWindow({"Syrex Hub Library"})

    Library:SetTheme("Color Hub 2") -- https://raw.githubusercontent.com/gerisxx/LIB.v-2/main/Themes.lua

    Library:SetTransparency(0.1) -- 0, 1

    Library:GetThemes() -- void, return = table

    Library:GetIcon("Icon Name")

    -- [ Configs ] --

    local toggleState = false
    local hatchingProcess = nil
    local EGGVALUE = "Cracked Egg" -- Set a default value
    local HATCHAMMOUNT = 1 -- Default hatching amount

    local function startHatching()
    while toggleState do
        local args = {
            [1] = EGGVALUE,
            [2] = HATCHAMMOUNT
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Eggs_RequestPurchase"):InvokeServer(unpack(args))
        wait(0.3)  -- Adjust the time interval between hatching attempts
    end
    end

    getgenv().config = {
        farm = {
            toggle = false,
            singleTarget = false,
            farmPrint = false,
            radius = 70,
            wait = 0.2
        },
        autoLootbag = false,
        autoOrb = false
    }
    
    local LocalPlayer = game.Players.LocalPlayer
    local HumanoidRootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart", true)
    
    local vim = game:GetService("VirtualInputManager")
    local sqrt = math.sqrt
    local pow = math.pow
    
    local Things = game.workspace['__THINGS']
    local Lootbags = Things.Lootbags
    local Orbs = Things.Orbs
    local ShinyRelics = Things.ShinyRelics
    local Breakables = Things.Breakables
    local Pets = Things.Pets
    local Network = game:GetService("ReplicatedStorage").Network
    local PetInventory = LocalPlayer.PlayerGui.Inventory.Frame.Main.Pets.EquippedPets
    
    getgenv().currentCoins = {}
    getgenv().equippedPets = {}
    getgenv().totalClaimed = 0
    getgenv().totalTime = 0
    
    local function indexPets()
        table.clear(equippedPets)
        for _,pet in ipairs(Pets:GetChildren()) do
            if PetInventory:FindFirstChild(pet.Name) then
                table.insert(equippedPets, pet.Name)
            end
        end
        return equippedPets
    end
    local function calcDistance(obj1,obj2)
        local pPosX,pPosZ = obj1.CFrame.X,obj1.CFrame.Z
        local hPosX, hPosZ = obj2.CFrame.X, obj2.CFrame.Z
    
        return sqrt(pow(pPosX-hPosX, 2) + pow(pPosZ-hPosZ, 2))
    end
    local function getCenter()
        local frame = Instance.new("Frame")
        frame.Parent = game.CoreGui
        frame.Name = LocalPlayer.Name
        frame.AnchorPoint = Vector2.new(0.5,0.5)
        frame.Position = UDim2.fromScale(0.5,0.5)
        frame.Size = UDim2.fromOffset(10,10)
        frame.Visible = false
    
        return {frame.AbsolutePosition.X,frame.AbsolutePosition.Y}
    end
    
    
    local isFeatureEnabled = false -- Set the initial state of the feature
    local loopHandle -- Variable to hold the loop handle
    
    local function toggleFeature(value)
        isFeatureEnabled = value -- Update the state of the feature
        if isFeatureEnabled then
            --[[ WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk! ]]
            local a = game.Players.LocalPlayer.Character.HumanoidRootPart
            local b = workspace.__THINGS
    
            local function get()
                local cf = a.CFrame
                for i, v in pairs(b.Orbs:GetChildren()) do
                    v:PivotTo(cf)
                end
            end
    
            loopHandle = game:GetService("RunService").Heartbeat:Connect(function()
                if isFeatureEnabled then
                    get()
                end
            end)
        else
            if loopHandle then
                loopHandle:Disconnect() -- Stop the loop if the feature is disabled
                loopHandle = nil
            end
        end
    end

    local function startAutoFishing()
        local plr = game.Players.LocalPlayer
        local ws = game:GetService("Workspace")
        local rStorage = game:GetService("ReplicatedStorage")
        local remote = rStorage.Network.Instancing_FireCustomFromClient

        local fishingGame = plr.PlayerGui._INSTANCES.FishingGame
        local fishingBar = fishingGame.GameBar.FishingBar
        local fishingRod = ws:WaitForChild(tostring(plr)).Model.Rod

        local args = {
            "Fishing",
            "RequestCast",
            Vector3.new(1139.0439453125, 75.91415405273438, -3445.31982421875)
        }

        -- Function to check if the fish is in the bar
        require(game:GetService("Workspace").__THINGS.__INSTANCE_CONTAINER.Active.Fishing.ClientModule.FishingGame).IsFishInBar = function()
            return true
        end

        while wait(0.3) do
            if not getgenv().autoFish then
                break
            end

            if not fishingRod:FindFirstChild("FishingLine") then
                remote:FireServer(unpack(args))
                wait(0.5)
            end

            if fishingRod:FindFirstChild("FishingLine") then
                while fishingRod:FindFirstChild("FishingLine") and getgenv().autoFish do
                    local attachment1 = fishingRod.FishingLine.Attachment1
                    local bobber = attachment1.Parent
                    local height = bobber.CFrame.Position.Y

                    if height > 75.91415405273438 then
                        print("Too high, waiting")
                    elseif height == 75.91415405273438 then
                        print("No fish, waiting")
                    elseif height < 75.8 then
                        print("Fish detected, reeling")
                        remote:FireServer("Fishing", "RequestReel")
                    end

                    wait(0.3)
                end
            end
        end
    end

    -- [ Buttons ] --

    local Tab = Window:MakeTab({Name = "Discord Server", Icon = "Server"})

    Tab:AddDiscordInvite({
        DiscordTitle = "Syrex Hub Discord Server",
        DiscordIcon = "rbxassetid://15786856818",
        DiscordLink = "https://discord.gg/SyrexHub"
    })

    local Tab = Window:MakeTab({Name = "Minigames", Icon = "Gamepad"})

    local Toggle = Tab:AddToggle({
        Name = "Auto-Fishing",
        Default = false,
        Callback = function(Value)
            getgenv().autoFish = Value

            if Value then
                startAutoFishing()
            end
        end
    })

    local Toggle = Tab:AddToggle({
        Name = "Toggle",
        Default = false,
        Callback = function(Value)
            if Value then
                -- Function to create ESP
                local chestsn = {
                    "Animated",
                }
    
                local function contains(table, val)
                    for i = 1, #table do
                        if table[i] == val then
                            return true
                        end
                    end
                    return false
                end
    
                while Value do
                    task.wait()
                    for __, v in pairs(game.Workspace["__THINGS"].__INSTANCE_CONTAINER.Active.Digsite.Important.ActiveChests:GetChildren()) do
                        if v:FindFirstChild("ESP") then
                            v:FindFirstChild("ESP"):Destroy()
                        end
                        if contains(chestsn, v.Name) then
                            if v.Name == "Animated" then
                                tcolor = Color3.fromRGB(222, 184, 135)
                            end
    
                            local a = Instance.new("BillboardGui", v)
                            a.Name = "ESP"
                            a.Size = UDim2.new(5, 0, 5, 0)
                            a.AlwaysOnTop = true
                            local b = Instance.new("Frame", a)
                            b.Size = UDim2.new(1, 0, 1, 0)
                            b.BackgroundTransparency = 0.80
                            b.BorderSizePixel = 0
                            b.BackgroundColor3 = tcolor
                            local c = Instance.new('TextLabel', b)
                            c.Size = UDim2.new(1, 0, 1, 1)
                            c.BorderSizePixel = 0
                            c.TextSize = 17
                            c.Text = "Chest"
                            c.BackgroundTransparency = 1
                            c.TextColor3 = tcolor
                            c.TextStrokeColor3 = Color3.fromRGB(6, 6, 6)
                            c.TextStrokeTransparency = 0.7
                        end
                    end
                end
            else
                -- Code to deactivate ESP (if needed)
                -- You might want to implement this based on your requirements
            end
        end
    })
    

    local Tab = Window:MakeTab({Name = "AutoFarm", Icon = "pointer"})

    local Toggle = Tab:AddToggle({
        Name = "Farm Nearest Coins",
        Default = false,
        Callback = function(Value)
    config.farm.toggle = value
    while config.farm.toggle and task.wait() do

    for _,v in ipairs(Breakables:GetChildren()) do
        if v.Name ~= "Highlight" and v:FindFirstChild("Hitbox", true) then
            local part = v:FindFirstChild("Hitbox", true)

            if calcDistance(part, HumanoidRootPart) <= config.farm.radius then
                if config.farm.singleTarget then
                    local tmpName = v.Name
                    local startTime = os.clock()

                    repeat
                        if calcDistance(part, HumanoidRootPart) > config.farm.radius then
                            break
                        end
                        task.wait(config.farm.wait)
                        Network.Breakables_PlayerDealDamage:FireServer(v.Name)
                    until not Breakables:FindFirstChild(v.Name)

                    totalClaimed = totalClaimed + 1; totalTime = totalTime + (os.clock() - startTime)
                    if config.farm.farmPrint then print("farmed "..tmpName.." in: "..tostring(os.clock() - startTime).." Avg: "..tostring(totalTime/totalClaimed)) end
                else
                    if not table.find(currentCoins, v.Name) then
                        table.insert(currentCoins, v.Name)
                        task.spawn(function()
                            local tmpPart = part
                            local tmpName = v.Name
                            local startTime = os.clock()
                            repeat
                                if calcDistance(tmpPart, HumanoidRootPart) > config.farm.radius then
                                    table.remove(currentCoins, table.find(currentCoins, v.Name))
                                    break
                                end

                                task.wait(config.farm.wait*math.random(1,2))

                                Network.Breakables_PlayerDealDamage:FireServer(tmpName)
                            until not Breakables:FindFirstChild(tmpName)

                            table.remove(currentCoins, table.find(currentCoins, v.Name))
                            totalClaimed = totalClaimed + 1; totalTime = totalTime + (os.clock() - startTime)
                            if config.farm.farmPrint then print("farmed "..tmpName.." in: "..tostring(os.clock() - startTime).." Avg: "..tostring(totalTime/totalClaimed)) end
                        end)
                    end
                end
            end
        end
    end

    end
    end
    })

    local Slider = Tab:AddSlider({
        Name = "Radius",
        MinValue = 70,
        MaxValue = 200,
        Default = 5,
        Increase = 1,
        Callback = function(Value)
            if tonumber(value) then
                config.farm.radius = tonumber(value)
            else
                config.farm.radius = 40
            end
        end
    })

    local Slider = Tab:AddSlider({
        Name = "Wait Time",
        MinValue = 0.2,
        MaxValue = 1,
        Default = 5,
        Increase = 1,
        Callback = function(Value)
            if tonumber(value) then
                config.farm.wait = tonumber(value)
            else
                config.farm.wait = 0.2
            end
        end
    })


    local Tab = Window:MakeTab({Name = "Shop", Icon = "menu"})


    local Tab = Window:MakeTab({Name = "Eggs", Icon = "Egg"})

    local Section = Tab:AddSection({"Eggs Selection"})

    local Dropdown = Tab:AddDropdown({
        Name = "Select Egg",
        Options = {"None", "Cracked Egg", "Spotted Egg", "Paw Egg", "Grass Egg", "Wood Egg", "Pumpkin Egg", "Hive Egg", "Acorn Egg", "Blossom Egg", "Corgi Egg", "Cat Egg", "Dog Egg", "Dragon Egg", "Rock Egg", "Geode Egg", "Hut Egg", "Grave Egg", "Spike Egg", "Sprout Egg", "Mushroom Egg", "Spirit Egg", "Crimson Egg", "Overgrown Egg", "Mossy Egg", "Jungle Egg", "Sandcastle Egg", "Palm Tree Egg", "Beach Ball Egg", "Coral Egg", "Anchor Egg", "Atlantis Egg", "Tropical Egg", "Beach Egg", "Coconut Egg", "Tiki Egg", "Sand Bucket Egg", "Sunny Egg", "Pirate Egg", "Ship Egg", "Zebra Egg", "Cheetah Egg", "Cactus Egg", "Fossil Egg", "Egyptian Egg", "Sandstone Egg", "Cowboy Egg", "Canyon Egg", "Hyena Egg", "Melted Egg", "Snow Egg", "Icicle Egg", "Snowman Egg", "Yeti Egg", "Ice Egg", "Thawed Egg", "Magma Egg", "Obsidian Egg", "Volcano Egg", "Bone Egg", "Tentacle Egg", "Hell Egg", "Metal Egg", "Sakura Egg", "Ninja Egg", "Lantern Egg", "Bonsai Egg", "Garden Egg", "Pixie Egg", "Pedal Egg", "Crowned Egg", "Royal Egg", "Dandelion Egg", "Colorful Egg", "Colorful Geode Egg", "Colorful Mosaic Egg", "Frosted Geode Egg", "Sculpture Egg", "Cocoa Egg", "Castle Egg Egg", "Teddy Egg", "Witch Egg"},
        Default = EGGVALUE,
        MultSelect = false,
        Callback = function(Value)
            EGGVALUE = Value
            print(EGGVALUE)
        end
    })

    local Slider = Tab:AddSlider({
        Name = "Hatching Ammount",
        MinValue = 1,
        MaxValue = 99,
        Default = HATCHAMMOUNT,
        Increase = 1,
        Callback = function(Value)
            HATCHAMMOUNT = Value
            print(HATCHAMMOUNT)
        end
    })

    local Toggle = Tab:AddToggle({
        Name = "Auto Buy Eggs",
        Default = toggleState,
        Callback = function(Value)
            toggleState = value
        
            if toggleState then
                -- Start the hatching process when toggle is turned on
                hatchingProcess = coroutine.create(startHatching)
                coroutine.resume(hatchingProcess)
            else
                -- Stop the hatching process when toggle is turned off
                if hatchingProcess then
                    coroutine.yield(hatchingProcess)
                    hatchingProcess = nil
                end
            end
        end
    })

    local Section = Tab:AddSection({"Options"})

    local toggleState = false
    local originalPlayEggAnimation = nil

    local Toggle = Tab:AddToggle({
        Name = "Remove Hatch Animations",
        Default = toggleState,
        Callback = function(Value)
            toggleState = Value -- Update the toggle state
        
            local Eggs = game.Players.LocalPlayer.PlayerScripts.Scripts.Game['Egg Opening Frontend']
            if toggleState then
                -- Store the original function and redefine it to do nothing
                originalPlayEggAnimation = getsenv(Eggs).PlayEggAnimation
                getsenv(Eggs).PlayEggAnimation = function() return end
            else
                -- Restore the original function
                if originalPlayEggAnimation then
                    getsenv(Eggs).PlayEggAnimation = originalPlayEggAnimation
                end
            end
        end
    })

    local Tab = Window:MakeTab({Name = "Teleports", Icon = "navigation"})

    local Dropdown = Tab:AddDropdown({
        Name = "Dropdown",
        Options = {"1", "2", "3"},
        Default = {"2"},
        MultSelect = false,
        Callback = function(Value)
            if Value == "Poppy Field" then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(99.95266723632812, 25.306690216064453, -259.495849609375)
            elseif Value == "Pumpkin Field" then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(400.419677734375, 129.3065643310547, -198.49993896484375)
            end
        end
    })


    local Tab = Window:MakeTab({Name = "Misc", Icon = "pointer"})

    local Button = Tab:AddButton({
        Name = "Anti-mail Stealer",
        Callback = function()
        
        end
    })

    local Button = Tab:AddButton({
        Name = "Button",
        Callback = function()
        
        end
    })

    local Button = Tab:AddButton({
        Name = "Button",
        Callback = function()
        
        end
    })

    local Button = Tab:AddButton({
        Name = "3D Rendering",
        Callback = function()
            ToggleEnabled = Value
            game:GetService("RunService"):Set3dRenderingEnabled(not ToggleEnabled)
        end
    })

    local Button = Tab:AddButton({
        Name = "Rejoin",
        Callback = function()
            game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
        end
    })

    local Button = Tab:AddButton({
        Name = "Server Hop",
        Callback = function()
            local Player = game.Players.LocalPlayer    
            local Http = game:GetService("HttpService")
            local TPS = game:GetService("TeleportService")
            local Api = "https://games.roblox.com/v1/games/"
            
            local _place,_id = game.PlaceId, game.JobId
            local _servers = Api.._place.."/servers/Public?sortOrder=Desc&limit=100"
            function ListServers(cursor)
            local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
            return Http:JSONDecode(Raw)
            end
            
            local Next; repeat
            local Servers = ListServers(Next)
            for i,v in next, Servers.data do
                if v.playing < v.maxPlayers and v.id ~= _id then
                    local s,r = pcall(TPS.TeleportToPlaceInstance,TPS,_place,v.id,Player)
                    if s then break end
                end
            end
            
            Next = Servers.nextPageCursor
            until not Next
        end
    })

    local Button = Tab:AddButton({
        Name = "Anti AFK",
        Callback = function()
            local VU = game:GetService("VirtualUser")

            game:GetService("Players").LocalPlayer.Idled:connect(function()
                VU:CaptureController()
                VU:ClickButton2(Vector2.new())
                print("Skipped")
            end)
            print("Anti Afk Enabled.")
        end
    })

    local Button = Tab:AddButton({
        Name = "Mobile Mode",
        Callback = function()
        -- Instances:

    local ScreenGui = Instance.new("ScreenGui")
    local ImageButton = Instance.new("ImageButton")
    local UICorner = Instance.new("UICorner")

    -- Properties:

    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    ImageButton.Parent = ScreenGui
    ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton.BorderSizePixel = 0
    ImageButton.Position = UDim2.new(0.751020432, 0, 0.242559522, 0)
    ImageButton.Size = UDim2.new(0, 42, 0, 41)
    ImageButton.Image = "http://www.roblox.com/asset/?id=15343201872"

    UICorner.Parent = ImageButton

    -- Function to Toggle Orion Visibility:

    local isVisible = true
    local orionGui = game:GetService("CoreGui").Orion

    local function ToggleOrionVisibility()
    isVisible = not isVisible
    for _, frame in ipairs(orionGui:GetDescendants()) do
        if frame:IsA("Frame") then
            frame.Visible = isVisible
        end
    end
    end

    -- Mouse Click Event for ImageButton:

    ImageButton.MouseButton1Click:Connect(ToggleOrionVisibility)
        end
    })

    local orionGui = game:GetService("CoreGui").Orion
    local isVisible = false


    local Button = Tab:AddButton({
        Name = "Destroy UI",
        Callback = function()
            Instance:Destroy()
        end
    })
